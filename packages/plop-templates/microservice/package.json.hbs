{
  "name": "{{dashCase name}}",
  "version": "1.0.0",
  "description": "{{description}}",
  "main": "server.js",
  "type": "module",
  "imports": {
    "@app/*": "./src/*",
    "@app/constants": "./src/constants/index.js",
    "@app/controllers": "./src/controllers/index.js",
    "@app/services": "./src/services/index.js",
    "@app/repositories": "./src/repositories/index.js",
    "@app/middleware": "./src/middleware/index.js",
    "@app/routes": "./src/routes/index.js",
    "@app/utils": "./src/utils/index.js",
    "@app/schemas": "./src/schemas/index.js"{{#if includeDatabase}},
    "@app/clients": "./src/clients/index.js"{{/if}}
  },
  "scripts": {
    "start": "node --loader @swc-node/register server.js",
    "dev": "nodemon --loader @swc-node/register server.js",
    "test": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs",
    "test:watch": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs --watch",
    "test:coverage": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs --coverage",
    "test:unit": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs --testPathPattern=unit",
    "test:integration": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs --testPathPattern=integration",
    "test:e2e": "node --experimental-vm-modules ./node_modules/jest/bin/jest.js --config jest.config.cjs --testPathPattern=e2e",{{#if includeDatabase}}
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "node --loader @swc-node/register prisma/seed.js",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset --force",{{/if}}
    "docs:generate": "node tools/docs-generator.js",
    "docs:swagger": "node tools/swagger-generator.js",
    "docs:postman": "node tools/postman-generator.js",
    "docs:watch": "nodemon --watch src --ext js --exec 'npm run docs:generate'",
    "docs:dev": "npm run docs:generate && npm run dev",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "setup": "pnpm install{{#if includeDatabase}} && pnpm db:generate{{/if}}"
  },
  "dependencies": {
    "@shared/core": "workspace:*",
    "fastify": "^5.5.0",
    "@fastify/cors": "^10.0.1",
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "@fastify/sensible": "^6.0.3",
    "@fastify/rate-limit": "^10.3.0",{{#if includeDatabase}}
    "@prisma/client": "^5.22.0",{{/if}}{{#if includeAuth}}
    "@fastify/helmet": "^13.0.1",{{/if}}
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@swc-node/register": "^1.10.10",
    "@babel/core": "^7.25.0",
    "@babel/preset-env": "^7.25.0",
    "babel-jest": "^29.7.0",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "nodemon": "^3.1.0",
    "eslint": "^9.9.0",
    "eslint-config-prettier": "^9.1.2",
    "prettier": "^3.3.0",{{#if includeDatabase}}
    "prisma": "^5.22.0",{{/if}}
    "@types/jest": "^29.5.13"
  },
  "keywords": [
    "fastify",
    "{{dashCase name}}",
    "api",
    "microservice",
    "shared-core"{{#if includeDatabase}},
    "prisma",
    "database"{{/if}}{{#if includeAuth}},
    "authentication",
    "jwt"{{/if}}
  ],
  "author": "",
  "license": "MIT"
}