version: '3.8'

services:
  # Comments API Service
  comments-api:
    build:
      context: ../../apps/comments
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
    volumes:
      - ../../apps/comments:/app
      - /app/node_modules
    networks:
      - comment-network
    restart: unless-stopped

  # User Management Service
  user-management:
    build:
      context: ../../apps/user-management
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
    volumes:
      - ../../apps/user-management:/app
      - /app/node_modules
    networks:
      - comment-network
    restart: unless-stopped

  # Sahab Service
  sahab:
    build:
      context: ../../apps/sahab
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - HOST=0.0.0.0
    volumes:
      - ../../apps/sahab:/app
      - /app/node_modules
    networks:
      - comment-network
    restart: unless-stopped

  # MongoDB (for future use)
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=comment
    volumes:
      - mongodb_data:/data/db
    networks:
      - comment-network
    restart: unless-stopped

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - comment-network
    restart: unless-stopped

  # Nginx (reverse proxy for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - comment-network
    depends_on:
      - comments-api
      - user-management
      - sahab
    restart: unless-stopped

networks:
  comment-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 